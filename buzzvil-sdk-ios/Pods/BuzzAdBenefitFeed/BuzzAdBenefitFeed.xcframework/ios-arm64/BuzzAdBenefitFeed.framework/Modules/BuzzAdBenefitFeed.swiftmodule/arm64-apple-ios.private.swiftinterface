// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BuzzAdBenefitFeed
// swift-module-flags-ignorable: -enable-bare-slash-regex
import BuzzAdBenefitBase
@_exported import BuzzAdBenefitFeed
import BuzzAdBenefitInterstitial
import BuzzAdBenefitNative
import BuzzRxSwift
import Foundation
import ReactiveObjC
import SafariServices
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public typealias BZVBuzzAdFeedBuilderBlock = (BuzzAdBenefitFeed.BZVBuzzAdFeedBuilder) -> Swift.Void
@objc @_inheritsConvenienceInitializers @objcMembers public class BZVBuzzAdFeedBuilder : ObjectiveC.NSObject {
  @objc public var config: BuzzAdBenefitFeed.BZVFeedConfig?
  @objc public var theme: BuzzAdBenefitFeed.BZVBuzzAdFeedTheme?
  @objc override dynamic public init()
  @objc deinit
}
extension BuzzAdBenefitFeed.BZVBuzzAdFeed {
  @objc public static func feed(block: (BuzzAdBenefitFeed.BZVBuzzAdFeedBuilder) -> Swift.Void) -> BuzzAdBenefitFeed.BZVBuzzAdFeed
  @objc convenience dynamic public init(block: (BuzzAdBenefitFeed.BZVBuzzAdFeedBuilder) -> Swift.Void)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class BZVFeedViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillLayoutSubviews()
  @objc @_Concurrency.MainActor(unsafe) public func trackOpenFeedEvent(with entryPoint: BuzzAdBenefitFeed.BABFeedEntryPoint)
  @objc @_Concurrency.MainActor(unsafe) public func scrollToTop()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension BuzzAdBenefitFeed.BZVFeedViewController : BuzzAdBenefitInterstitial.BZVBuzzAdInterstitialDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func bzvBuzzAdInterstitialDidLoadAd(_ interstitial: BuzzAdBenefitInterstitial.BZVBuzzAdInterstitial)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func bzvBuzzAdInterstitialDidFail(toLoadAd interstitial: BuzzAdBenefitInterstitial.BZVBuzzAdInterstitial, withError: any Swift.Error)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func bzvBuzzAdInterstitialDidDismiss(_ viewController: UIKit.UIViewController)
}
extension BuzzAdBenefitFeed.BZVFeedViewController : UIKit.UIPageViewControllerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func pageViewController(_ pageViewController: UIKit.UIPageViewController, didFinishAnimating finished: Swift.Bool, previousViewControllers: [UIKit.UIViewController], transitionCompleted completed: Swift.Bool)
}
extension BuzzAdBenefitFeed.BZVFeedViewController : UIKit.UIPageViewControllerDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func pageViewController(_ pageViewController: UIKit.UIPageViewController, viewControllerBefore viewController: UIKit.UIViewController) -> UIKit.UIViewController?
  @_Concurrency.MainActor(unsafe) @objc dynamic public func pageViewController(_ pageViewController: UIKit.UIPageViewController, viewControllerAfter viewController: UIKit.UIViewController) -> UIKit.UIViewController?
}
extension BuzzAdBenefitFeed.BZVFeedViewController : BuzzAdBenefitBase.WidgetTutorialViewControllerDelegate {
  @_Concurrency.MainActor(unsafe) public func widgetTutorialViewControllerDidCancel(_ viewController: UIKit.UIViewController)
  @_Concurrency.MainActor(unsafe) public func widgetTutorialViewControllerDidConfirm(_ viewController: UIKit.UIViewController)
}
extension BuzzAdBenefitFeed.FeedEntryBIEvent {
  @objc public static func showFeedEntry(customEntryPointName: Swift.String) -> BuzzAdBenefitFeed.FeedEntryBIEvent
  @objc public static func clickFeedEntry(customEntryPointName: Swift.String) -> BuzzAdBenefitFeed.FeedEntryBIEvent
  public static func showCarouselSlide() -> BuzzAdBenefitFeed.FeedEntryBIEvent
  public static func clickCarouselSlide() -> BuzzAdBenefitFeed.FeedEntryBIEvent
}
public typealias BZVFeedConfigBuilderBlock = (BuzzAdBenefitFeed.BZVFeedConfigBuilder) -> Swift.Void
@objc @_inheritsConvenienceInitializers @objcMembers public class BZVFeedConfigBuilder : ObjectiveC.NSObject {
  @objc public var unitId: Swift.String?
  @objc public var title: Swift.String?
  @objc public var headerViewHolderClass: Swift.AnyClass?
  @objc public var baseRewardViewHolderClass: Swift.AnyClass?
  @objc public var adViewHolderClass: Swift.AnyClass?
  @objc public var cpsAdViewHolderClass: Swift.AnyClass?
  @objc public var articleViewHolderClass: Swift.AnyClass?
  @objc public var errorViewHolderClass: Swift.AnyClass?
  @objc public var shouldShowAppTrackingTransparencyDialog: Swift.Bool
  @objc public var shouldShowAppTrackingTransparencyGuideBanner: Swift.Bool
  @objc public var shouldShowWidgetPromotionDialog: Swift.Bool
  @objc public var shouldShowWidgetPromotionBanner: Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
extension BuzzAdBenefitFeed.BZVFeedConfig {
  @objc public static func config(block: (BuzzAdBenefitFeed.BZVFeedConfigBuilder) -> Swift.Void) -> BuzzAdBenefitFeed.BZVFeedConfig
  @objc convenience dynamic public init(block: (BuzzAdBenefitFeed.BZVFeedConfigBuilder) -> Swift.Void)
}
@_hasMissingDesignatedInitializers @objc(BABFeedEntryBIEvent) public class FeedEntryBIEvent : ObjectiveC.NSObject, BuzzAdBenefitBase.BIEvent {
  @objc final public let type: Swift.String
  @objc final public let name: Swift.String
  @objc final public let attributes: [Swift.String : Swift.String]
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class BZVFeedConfig : ObjectiveC.NSObject {
  @objc final public let unitId: Swift.String
  @objc final public let title: Swift.String
  @objc final public let headerViewHolderClass: Swift.AnyClass
  @objc final public let baseRewardViewHolderClass: Swift.AnyClass
  @objc final public let adViewHolderClass: Swift.AnyClass
  @objc final public let cpsAdViewHolderClass: Swift.AnyClass
  @objc final public let articleViewHolderClass: Swift.AnyClass
  @objc final public let errorViewHolderClass: Swift.AnyClass
  @objc final public let shouldShowAppTrackingTransparencyDialog: Swift.Bool
  @objc final public let shouldShowAppTrackingTransparencyGuideBanner: Swift.Bool
  @objc final public let shouldShowWidgetPromotionDialog: Swift.Bool
  @objc final public let shouldShowWidgetPromotionBanner: Swift.Bool
  @objc deinit
}
extension BuzzAdBenefitFeed.BZVFeedPromotionViewBinder {
  final public class Builder {
    public init(unitId: Swift.String)
    final public func feedPromotionView(_ feedPromotionView: BuzzAdBenefitFeed.BZVFeedPromotionView) -> Self
    final public func creativeView(_ creativeView: UIKit.UIImageView) -> Self
    final public func iconImageView(_ iconImageView: UIKit.UIImageView) -> Self
    final public func titleLabel(_ titleLabel: UIKit.UILabel) -> Self
    final public func ctaView(_ ctaView: any UIKit.UIView & BuzzAdBenefitNative.BZVCtaViewProtocol) -> Self
    final public func setClickableViews(_ clickableViews: [UIKit.UIView]) -> Self
    final public func build() -> BuzzAdBenefitFeed.BZVFeedPromotionViewBinder
    @objc deinit
  }
}
extension BuzzAdBenefitFeed.BZVFeedPromotionViewBinder {
  public typealias BZVFeedPromotionViewBinderBlock = (BuzzAdBenefitFeed.BZVFeedPromotionViewBinderBuilder) -> Swift.Void
  @objc(viewBinderWithBlock:) public static func viewBinder(with block: (BuzzAdBenefitFeed.BZVFeedPromotionViewBinderBuilder) -> Swift.Void) -> BuzzAdBenefitFeed.BZVFeedPromotionViewBinder
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers final public class BZVFeedPromotionViewBinderBuilder : ObjectiveC.NSObject {
  @objc final public var feedPromotionView: BuzzAdBenefitFeed.BZVFeedPromotionView?
  @objc final public var creativeView: UIKit.UIImageView?
  @objc final public var iconImageView: UIKit.UIImageView?
  @objc final public var titleLabel: UIKit.UILabel?
  @objc final public var ctaView: (any UIKit.UIView & BuzzAdBenefitNative.BZVCtaViewProtocol)?
  @objc final public var clickableViews: [UIKit.UIView]?
  @objc final public var unitId: Swift.String?
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class BZVBuzzAdFeed : ObjectiveC.NSObject {
  @objc public var availableRewards: Swift.Int {
    @objc get
  }
  @objc public var config: BuzzAdBenefitFeed.BZVFeedConfig {
    @objc get
  }
  @objc public var theme: BuzzAdBenefitFeed.BZVBuzzAdFeedTheme {
    @objc get
  }
  @objc public var viewController: BuzzAdBenefitFeed.BZVFeedViewController {
    @objc get
  }
  @objc public static func setDefaultTheme(_ theme: BuzzAdBenefitFeed.BZVBuzzAdFeedTheme)
  @objc public static func defaultTheme() -> BuzzAdBenefitFeed.BZVBuzzAdFeedTheme
  @objc public func createFeedViewController(entryPoint: BuzzAdBenefitFeed.BABFeedEntryPoint?) -> BuzzAdBenefitFeed.BZVFeedViewController
  @objc public func load(onSuccess: @escaping (() -> Swift.Void), onFailure: @escaping ((Foundation.NSError) -> Swift.Void))
  @objc public func reset()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) final public class BZVFeedPromotionView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc override final public func didMoveToWindow()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension BuzzAdBenefitFeed.BZVFeedPromotionView : BuzzAdBenefitNative.BABImpressionTrackableView {
  @_Concurrency.MainActor(unsafe) @objc final public func shouldTrackImpression() -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc final public func viewDidImpressed()
}
@objc @_hasMissingDesignatedInitializers @objcMembers final public class BZVFeedPromotionViewBinder : ObjectiveC.NSObject {
  @objc final public func bind()
  @objc final public func unbind()
  @objc deinit
}
