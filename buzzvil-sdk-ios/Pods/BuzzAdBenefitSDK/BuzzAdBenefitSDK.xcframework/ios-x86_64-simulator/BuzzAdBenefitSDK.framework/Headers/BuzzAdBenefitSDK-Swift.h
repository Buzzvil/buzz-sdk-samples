#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef BUZZADBENEFITSDK_SWIFT_H
#define BUZZADBENEFITSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <BuzzAdBenefitSDK/BuzzAdBenefitSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BuzzAdBenefitSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class BABSessionDTO;
@class BABUserProfileDTO;

SWIFT_PROTOCOL_NAMED("AuthManager")
@protocol BABAuthManagerSwift
- (BOOL)isLoggedIn SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)loadBuzzUUIDString SWIFT_WARN_UNUSED_RESULT;
- (BABSessionDTO * _Nullable)loadSession SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)loadToken SWIFT_WARN_UNUSED_RESULT;
- (BABUserProfileDTO * _Nullable)loadUserProfile SWIFT_WARN_UNUSED_RESULT;
- (void)loginWith:(BABUserProfileDTO * _Nonnull)userProfile onSuccess:(void (^ _Nonnull)(BABSessionDTO * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
- (void)logout;
@end

@class BZVConfig;
@class BABConfig;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK15BABConfigMapper")
@interface BABConfigMapper : NSObject
- (BABConfig * _Nonnull)transformWithConfig:(BZVConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol BZVCtaViewProtocol;
@class BZVNativeAd;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK15BABCtaPresenter")
@interface BABCtaPresenter : NSObject
- (nonnull instancetype)initWithCtaView:(id <BZVCtaViewProtocol> _Nonnull)ctaView OBJC_DESIGNATED_INITIALIZER;
- (void)bindWithNativeAd:(BZVNativeAd * _Nonnull)nativeAd;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK8BABImage")
@interface BABImage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

@interface BABImage (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull arrow_left;)
+ (UIImage * _Nonnull)arrow_left SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull arrow_up;)
+ (UIImage * _Nonnull)arrow_up SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull check;)
+ (UIImage * _Nonnull)check SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull checkbox_checked;)
+ (UIImage * _Nonnull)checkbox_checked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull checkbox_unchecked;)
+ (UIImage * _Nonnull)checkbox_unchecked SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull chevron_left;)
+ (UIImage * _Nonnull)chevron_left SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull chevron_right;)
+ (UIImage * _Nonnull)chevron_right SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull close;)
+ (UIImage * _Nonnull)close SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull close_circle;)
+ (UIImage * _Nonnull)close_circle SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull empty;)
+ (UIImage * _Nonnull)empty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull gift;)
+ (UIImage * _Nonnull)gift SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull help;)
+ (UIImage * _Nonnull)help SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull screen_full;)
+ (UIImage * _Nonnull)screen_full SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull tooltip;)
+ (UIImage * _Nonnull)tooltip SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull volume_mute;)
+ (UIImage * _Nonnull)volume_mute SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull volume_on;)
+ (UIImage * _Nonnull)volume_on SWIFT_WARN_UNUSED_RESULT;
@end


@interface BABImage (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull article;)
+ (UIImage * _Nonnull)article SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull calendar_active;)
+ (UIImage * _Nonnull)calendar_active SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull calendar_inactive;)
+ (UIImage * _Nonnull)calendar_inactive SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull coin;)
+ (UIImage * _Nonnull)coin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull coin_check;)
+ (UIImage * _Nonnull)coin_check SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull coin_empty;)
+ (UIImage * _Nonnull)coin_empty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull error;)
+ (UIImage * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull feed_daily_reward_point;)
+ (UIImage * _Nonnull)feed_daily_reward_point SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull feed_empty;)
+ (UIImage * _Nonnull)feed_empty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull feed_empty_privacy;)
+ (UIImage * _Nonnull)feed_empty_privacy SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull feed_promotion_creative;)
+ (UIImage * _Nonnull)feed_promotion_creative SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull feed_promotion_icon;)
+ (UIImage * _Nonnull)feed_promotion_icon SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull gift_box_closed;)
+ (UIImage * _Nonnull)gift_box_closed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull gift_box_opened;)
+ (UIImage * _Nonnull)gift_box_opened SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull gift_with_coin;)
+ (UIImage * _Nonnull)gift_with_coin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull learn_more;)
+ (UIImage * _Nonnull)learn_more SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull pause;)
+ (UIImage * _Nonnull)pause SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull play;)
+ (UIImage * _Nonnull)play SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull replay;)
+ (UIImage * _Nonnull)replay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull shining_coins;)
+ (UIImage * _Nonnull)shining_coins SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull total_reward_widget;)
+ (UIImage * _Nonnull)total_reward_widget SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull widget_tutorial_step1;)
+ (UIImage * _Nonnull)widget_tutorial_step1 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull widget_tutorial_step2;)
+ (UIImage * _Nonnull)widget_tutorial_step2 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull widget_tutorial_step3;)
+ (UIImage * _Nonnull)widget_tutorial_step3 SWIFT_WARN_UNUSED_RESULT;
@end

@class BABAd;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK17BABNativeAdMapper")
@interface BABNativeAdMapper : NSObject
- (BZVNativeAd * _Nonnull)transformFromBABAd:(BABAd * _Nonnull)ad SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK9BABString")
@interface BABString : NSObject
+ (NSString * _Nonnull)localizedStringForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class BZVUserPreferences;
@class BABUserPreference;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK24BABUserPreferencesMapper")
@interface BABUserPreferencesMapper : NSObject
- (BABUserPreference * _Nonnull)transformWithUserPreferences:(BZVUserPreferences * _Nonnull)userPreferences SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class BZVLoginRequest;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK20BABUserProfileMapper")
@interface BABUserProfileMapper : NSObject
- (BABUserProfileDTO * _Nonnull)transformWithLoginRequest:(BZVLoginRequest * _Nonnull)loginRequest SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL_NAMED("BIEvent")
@protocol BABBIEvent
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull attributes;
@end


SWIFT_PROTOCOL_NAMED("BIEventTracker")
@protocol BABBIEventTracker
- (void)track:(id <BABBIEvent> _Nonnull)event;
- (void)track:(id <BABBIEvent> _Nonnull)event unitId:(NSString * _Nonnull)unitId;
@end

@protocol BZVBuzzAdInterstitialDelegate;
@class UIViewController;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK21BZVBuzzAdInterstitial")
@interface BZVBuzzAdInterstitial : NSObject
@property (nonatomic, weak) id <BZVBuzzAdInterstitialDelegate> _Nullable delegate;
- (void)load;
- (void)presentOnViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BZVBuzzAdInterstitial (SWIFT_EXTENSION(BuzzAdBenefitSDK))
- (void)interstitialViewControllerDidFinish:(UIViewController * _Nonnull)viewController;
@end

@class BZVBuzzAdInterstitialBuilder;

@interface BZVBuzzAdInterstitial (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (BZVBuzzAdInterstitial * _Nonnull)interstitialWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVBuzzAdInterstitialBuilder * _Nonnull))block SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVBuzzAdInterstitialBuilder * _Nonnull))block;
@end

@class BZVBuzzAdInterstitialTheme;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK28BZVBuzzAdInterstitialBuilder")
@interface BZVBuzzAdInterstitialBuilder : NSObject
@property (nonatomic, copy) NSString * _Nullable unitId;
@property (nonatomic) BZVBuzzAdInterstitialType type;
@property (nonatomic, strong) BZVBuzzAdInterstitialTheme * _Nullable theme;
@property (nonatomic) BOOL inquiryButtonHidden;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP16BuzzAdBenefitSDK29BZVBuzzAdInterstitialDelegate_")
@protocol BZVBuzzAdInterstitialDelegate <NSObject>
- (void)BZVBuzzAdInterstitialDidLoadAd:(BZVBuzzAdInterstitial * _Nonnull)interstitial;
- (void)BZVBuzzAdInterstitialDidFailToLoadAd:(BZVBuzzAdInterstitial * _Nonnull)interstitial withError:(NSError * _Nonnull)withError;
- (void)BZVBuzzAdInterstitialDidDismiss:(UIViewController * _Nonnull)viewController;
@end

@class BZVNativeAdRequest;
@class NSError;
@class BZVNativeAdsRequest;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK15BZVBuzzAdNative")
@interface BZVBuzzAdNative : NSObject
+ (BZVBuzzAdNative * _Nonnull)nativeWithUnitId:(NSString * _Nonnull)unitId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithUnitId:(NSString * _Nonnull)unitId;
- (nonnull instancetype)initWithUnitId:(NSString * _Nonnull)unitId autoResetCursor:(BOOL)autoResetCursor;
- (void)loadAdWithAdRequest:(BZVNativeAdRequest * _Nonnull)adRequest onSuccess:(void (^ _Nonnull)(BZVNativeAd * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
- (void)loadAdsWithAdsRequest:(BZVNativeAdsRequest * _Nonnull)adsRequest onSuccess:(void (^ _Nonnull)(NSArray<BZVNativeAd *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
- (void)loadAdsWith:(BZVNativeAdsRequest * _Nonnull)adsRequest requestTarget:(NSString * _Nonnull)requestTarget onSuccess:(void (^ _Nonnull)(NSArray<BZVNativeAd *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
- (void)loadAvailableRewardsWith:(BZVNativeAdsRequest * _Nonnull)adsRequest onSuccess:(void (^ _Nonnull)(NSInteger))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
- (void)resetCursor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;
@class UIColor;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK17BZVDefaultCtaView")
@interface BZVDefaultCtaView : UIStackView
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setCtaBackgroundColor:(BZVControlStateResource<UIColor *> * _Nonnull)ctaBackgroundColor;
- (void)setCtaTextColor:(BZVControlStateResource<UIColor *> * _Nonnull)ctaTextColor;
- (void)setRewardImage:(UIImage * _Nonnull)rewardImage;
- (void)setParticipatedImage:(UIImage * _Nonnull)participatedImage;
@end


@interface BZVDefaultCtaView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BZVCtaViewProtocol>
- (void)renderRewardNotAvailableViewStateWithCtaText:(NSString * _Nonnull)ctaText;
- (void)renderRewardAvailableViewStateWithCtaText:(NSString * _Nonnull)ctaText reward:(NSInteger)reward;
- (void)renderParticipatingViewStateWithCtaText:(NSString * _Nonnull)ctaText;
- (void)renderParticipatedViewStateWithCtaText:(NSString * _Nonnull)ctaText;
@end

@class BuzzVideoPlayer;
enum BuzzMediaViewAspect : NSInteger;
@class NSURL;
@protocol BuzzPlayerProtocol;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK13BuzzMediaView")
@interface BuzzMediaView : UIView
@property (nonatomic, strong) BuzzVideoPlayer * _Nonnull videoPlayer;
@property (nonatomic) enum BuzzMediaViewAspect fillMode;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)loadImageAtUrl:(NSURL * _Nonnull)url;
- (void)loadVideoAtUrl:(NSURL * _Nonnull)url autoPlay:(BOOL)autoPlay thumbnailImageUrl:(NSURL * _Nonnull)thumbnailImageUrl fromSecond:(NSTimeInterval)fromSecond mute:(BOOL)mute;
- (void)loadVideoWithBuzzPlayer:(id <BuzzPlayerProtocol> _Nonnull)player autoPlay:(BOOL)autoPlay thumbnailImageUrl:(NSURL * _Nonnull)thumbnailImageUrl;
- (void)loadVideoAtVastTag:(NSString * _Nonnull)vastTag autoPlay:(BOOL)autoPlay thumbnailImageUrl:(NSURL * _Nonnull)thumbnailImageUrl fromSecond:(NSTimeInterval)fromSecond mute:(BOOL)mute;
- (void)didEnterFullscreen;
- (void)didExitFullscreen;
- (void)didMoveToWindow;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK12BZVMediaView")
@interface BZVMediaView : BuzzMediaView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol BZVNativeAdEventDelegate;
@class BZVNativeAdProduct;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK11BZVNativeAd")
@interface BZVNativeAd : NSObject
@property (nonatomic, weak) id <BZVNativeAdEventDelegate> _Nullable delegate;
@property (nonatomic, weak) id <BZVNativeAdEventDelegate> _Nullable internalDelegate;
@property (nonatomic, readonly, strong) BABAd * _Nonnull ad;
+ (BZVNativeAd * _Nonnull)nativeAdWithBABAd:(BABAd * _Nonnull)ad SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull Id;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull callToAction;
@property (nonatomic, readonly, strong) BZVRevenueType _Nonnull revenueType;
@property (nonatomic, readonly, strong) BZVNativeAdProduct * _Nonnull product;
@property (nonatomic, readonly) double totalReward;
@property (nonatomic, readonly) double availableReward;
@property (nonatomic, readonly) BOOL isCps;
@property (nonatomic, readonly) NSInteger adnetworkCampaignType;
@property (nonatomic, readonly) BOOL isActionType;
@property (nonatomic, readonly) BOOL isClicked;
@property (nonatomic, readonly) BOOL isDeepLink;
@property (nonatomic, readonly) BOOL isParticipated;
@property (nonatomic, readonly) BOOL isRewardReceived;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Class that represents native ad data.
SWIFT_CLASS("_TtC16BuzzAdBenefitSDK12BZVNativeAd2")
@interface BZVNativeAd2 : NSObject
/// The title of native ad.
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// The description of native ad.
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
/// The total reward of native ad.
@property (nonatomic, readonly) NSInteger reward;
/// The type of ad.
@property (nonatomic, readonly, copy) NSString * _Nonnull revenueType;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK16BZVNativeAd2Pool")
@interface BZVNativeAd2Pool : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithUnitId:(NSString * _Nonnull)unitId OBJC_DESIGNATED_INITIALIZER;
- (void)loadAdsWithCount:(NSInteger)count completionHandler:(void (^ _Nonnull)(NSInteger))completionHandler errorHandler:(void (^ _Nonnull)(NSError * _Nonnull))errorHandler;
@end

@protocol BZVNativeAdViewVideoDelegate;
@protocol BZVNativeAdEventSessionProvider;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK15BZVNativeAdView")
@interface BZVNativeAdView : UIView
@property (nonatomic, weak) id <BZVNativeAdViewVideoDelegate> _Nullable videoDelegate;
@property (nonatomic, strong) BZVMediaView * _Nullable mediaView;
@property (nonatomic, copy) NSArray<UIView *> * _Nonnull clickableViews;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setEventSessionProvider:(id <BZVNativeAdEventSessionProvider> _Nonnull)eventSessionProvider;
- (void)setNativeAd:(BZVNativeAd * _Nonnull)nativeAd;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// The parent view of other view components to present Native Ad in BuzzAdBenefit Native2.
/// This class inherits <code>BZVNativeAdView</code>.
SWIFT_CLASS("_TtC16BuzzAdBenefitSDK16BZVNativeAd2View")
@interface BZVNativeAd2View : BZVNativeAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum BZVRewardResult : NSInteger;

/// Class that binds BuzzAdBenefit native ad to views provided by SDK client.
/// You can create this object only by the builders we supply.
/// <ul>
///   <li>
///     Nested class builder (Available only in Swift)
///     \code
///     BZVNativeAd2ViewBinder.Builder(unitId: "yourUnitId")
///       .nativeAd2View(yourNativeAd2View)
///       .mediaView(yourMediaView)
///       .build()
///
///     \endcode</li>
///   <li>
///     Static function with builder inside the block (Available in Swift and Objective-C)
///     \code
///     BZVNativeAd2ViewBinder { builder in
///       builder.unitId = "yourUnitId"
///       builder.nativeAd2View = self.yourNativeAd2View
///       builder.mediaView = self.yourMediaView
///     }
///
///     \endcode\code
///     BZVNativeAd2ViewBinder * viewBinder = [BZVNativeAd2ViewBinder viewBinderWithBlock:^(BZVNativeAd2ViewBinderBuilder * _Nonnull builder) {
///       builder.unitId = @"yourUnitId";
///       builder.nativeAd2View = self.yourNativeAd2View;
///       builder.mediaView = self.yourMediaView;
///     }];
///
///     \endcode</li>
/// </ul>
/// You can start the loading ad process by calling the <code>bind()</code> function.
SWIFT_CLASS("_TtC16BuzzAdBenefitSDK22BZVNativeAd2ViewBinder")
@interface BZVNativeAd2ViewBinder : NSObject
/// Subscribes viewBinder events.
/// Every closure parameter of this method is invoked at most once per ad loading.
/// note:
/// If auto refresh setting is on, closures will be called every time it loads.
/// warning:
/// Use <em>weak self</em> to avoid strong reference cycles if you need to refer self inside every closure parameter.
/// Use this method only once. Duplicate calls will replace the previous closures.
/// Use this method before <code>bind()</code>.
/// \param onRequest Action to invoke right after loading ad is requested.
///
/// \param onNext Action to invoke when ad is loaded.
/// A closure with <code>BZVNativeAd2</code> parameter.
/// It will be called before ad data is presented to the provided views.
///
/// \param onError Action to invoke when <em>initial</em> loading ad failed.
/// A closure with <code>NSError</code> parameter.
///
/// \param onCompleted Action to invoke when refreshing ad is finished.
///
- (void)subscribeEventsOnRequest:(void (^ _Nonnull)(void))onRequest onNext:(void (^ _Nonnull)(BZVNativeAd2 * _Nonnull))onNext onError:(void (^ _Nonnull)(NSError * _Nonnull))onError onCompleted:(void (^ _Nonnull)(void))onCompleted;
/// Subscribes current native ad events.
/// If native ad loading is failed, closure parameters will not be called.
/// note:
/// If auto refresh setting is on, closures will be called every time it loads.
/// warning:
/// Use <em>weak self</em> to avoid strong reference cycles if you need to refer self inside every closure parameter.
/// Use this method only once. Duplicate calls will replace the previous closures.
/// Use this method before <code>bind()</code>.
/// \param onImpressed Action to invoke right after ad is impressed on screen.
/// A closure with <code>BZVNativeAd2</code> parameter.
///
/// \param onClicked Action to invoke right after ad is clicked.
/// A closure with <code>BZVNativeAd2</code> parameter.
///
/// \param onRewardRequested Action to invoke when ad reward is requested.
/// A closure with <code>BZVNativeAd2</code> parameter.
/// This closure will not be called when ad is non reward content.
///
/// \param onRewarded Action to invoke when ad is rewarded.
/// A closure with <code>BZVNativeAd2</code>, <code>BZVRewardResult</code> parameter.
/// This closure will not be called when ad is non reward content.
///
/// \param onParticipated Action to invoke when ad is participated.
/// A closure with <code>BZVNativeAd2</code> parameter.
///
- (void)subscribeAdEventsOnImpressed:(void (^ _Nonnull)(BZVNativeAd2 * _Nonnull))onImpressed onClicked:(void (^ _Nonnull)(BZVNativeAd2 * _Nonnull))onClicked onRewardRequested:(void (^ _Nonnull)(BZVNativeAd2 * _Nonnull))onRewardRequested onRewarded:(void (^ _Nonnull)(BZVNativeAd2 * _Nonnull, enum BZVRewardResult))onRewarded onParticipated:(void (^ _Nonnull)(BZVNativeAd2 * _Nonnull))onParticipated;
/// Binds native ad to provided views and starts .
/// Starts loading ad and if native ad is successfully loaded, the ad data is bound to the provided views.
/// When <code>BZVNativeAd2Pool</code> is set by <code>setPool()</code>, binds native ad initialized by nativeAd2Pool.
- (void)bind;
- (void)setPool:(BZVNativeAd2Pool * _Nonnull)pool at:(NSInteger)index;
- (void)unbind;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BZVNativeAd2ViewBinder (SWIFT_EXTENSION(BuzzAdBenefitSDK))
/// Binds native ad to provided views and starts loading ad.
/// This method is deprecated. Use <code>subscribeEvents()</code> and <code>bind()</code> instead.
/// If native ad is successfully loaded, the ad data is bound to the provided views.
/// note:
/// Every closure parameter of this method is invoked at most once per ad loading.
/// If auto refresh setting is on, closures will be called every time it loads.
/// warning:
/// Use <em>weak self</em> to avoid strong reference cycles if you need to refer self inside every closure parameter.
/// Use this method only once. Duplicate calls will replace the previous closures and ads.
/// \param onRequest Action to invoke right after loading ad is requested.
///
/// \param onSuccess Action to invoke when ad is successfully loaded.
/// It will be called before ad data is presented to the provided views.
///
/// \param onFailure Action to invoke when loading ad failed.
/// A closure with a <code>NSError</code> parameter about the failure.
///
- (void)bindOnRequest:(void (^ _Nonnull)(void))onRequest onSuccess:(void (^ _Nonnull)(void))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure SWIFT_DEPRECATED_MSG("Use subscribeEvents() and bind() instead.");
@end


@class BZVNativeAd2ViewBinderBuilder;

@interface BZVNativeAd2ViewBinder (SWIFT_EXTENSION(BuzzAdBenefitSDK))
/// Builds the viewBinder instance.
/// warning:
/// nativeAd2View, mediaView and unitId must be set.
/// If not, preconditionFailure will be called.
///
/// returns:
/// The <code>BZVNativeAd2ViewBinder</code> instance with provided view components.
+ (BZVNativeAd2ViewBinder * _Nonnull)viewBinderWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVNativeAd2ViewBinderBuilder * _Nonnull))block SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImageView;
@class UILabel;

/// Builder class that builds <code>BZVNativeAd2ViewBinder</code> with view components.
SWIFT_CLASS("_TtC16BuzzAdBenefitSDK29BZVNativeAd2ViewBinderBuilder")
@interface BZVNativeAd2ViewBinderBuilder : NSObject
/// Property to set nativeAd2View to the builder.
/// Required component.
/// warning:
/// This property must be set.
/// If not, preconditionFailure will be called.
@property (nonatomic, strong) BZVNativeAd2View * _Nullable nativeAd2View;
/// Property to set mediaView to the builder.
/// Required component.
/// warning:
/// This property must be set.
/// If not, preconditionFailure will be called.
@property (nonatomic, strong) BZVMediaView * _Nullable mediaView;
/// Property to set iconImageView to the builder.
@property (nonatomic, strong) UIImageView * _Nullable iconImageView;
/// Property to set titleLabel to the builder.
@property (nonatomic, strong) UILabel * _Nullable titleLabel;
/// Property to set descriptionLabel to the builder.
@property (nonatomic, strong) UILabel * _Nullable descriptionLabel;
/// Property to set ctaView to the builder.
@property (nonatomic, strong) UIView <BZVCtaViewProtocol> * _Nullable ctaView;
/// Property to set clickableViews to the builder.
@property (nonatomic, copy) NSArray<UIView *> * _Nullable clickableViews;
/// Property to set unitId to the builder.
/// Required component.
/// warning:
/// This property must be set.
/// If not, preconditionFailure will be called.
@property (nonatomic, copy) NSString * _Nullable unitId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP16BuzzAdBenefitSDK24BZVNativeAdEventDelegate_")
@protocol BZVNativeAdEventDelegate <NSObject>
- (void)didImpressAd:(BZVNativeAd * _Nonnull)nativeAd;
- (void)didClickAd:(BZVNativeAd * _Nonnull)nativeAd;
- (void)didRequestRewardForAd:(BZVNativeAd * _Nonnull)ad;
- (void)didRewardForAd:(BZVNativeAd * _Nonnull)Ad withResult:(enum BZVRewardResult)result;
- (void)didParticipateAd:(BZVNativeAd * _Nonnull)nativeAd;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK18BZVNativeAdProduct")
@interface BZVNativeAdProduct : NSObject
@property (nonatomic, readonly) float price;
@property (nonatomic, readonly) float discountedPrice;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly) BOOL isSpotlighted;
+ (BZVNativeAdProduct * _Nonnull)productWithPrice:(float)price discountedPrice:(float)discountedPrice category:(NSString * _Nonnull)category isSpotlighted:(BOOL)isSpotlighted SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK18BZVNativeAdRequest")
@interface BZVNativeAdRequest : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@interface BZVNativeAdView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BABImpressionTrackableView>
- (BOOL)shouldTrackImpression SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidImpressed;
@end

@class BABFullscreenVideoViewController;

@interface BZVNativeAdView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BABFullscreenVideoViewControllerDelegate>
- (void)fullscreenVideoViewControllerDidDismiss:(BABFullscreenVideoViewController * _Nonnull)fullscreenVideoViewController currentFullScreenVideoAd:(BABAd * _Nonnull)currentFullScreenVideoAd;
- (void)fullscreenVideoViewControllerLearnMoreButtonTapped:(BABFullscreenVideoViewController * _Nonnull)fullscreenViewViewController;
@end


@interface BZVNativeAdView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BABNativeAdViewProtocol>
- (void)renderImageMediaAtUrl:(NSURL * _Null_unspecified)url;
- (void)renderVideoMediaAtUrl:(NSURL * _Null_unspecified)url autoPlay:(BOOL)autoPlay thumbnailImageUrl:(NSURL * _Null_unspecified)thumbnailImageUrl fromSecond:(NSTimeInterval)fromSecond mute:(BOOL)mute;
- (void)renderVideoMediaAtVastTag:(NSString * _Null_unspecified)vastTag autoPlay:(BOOL)autoPlay thumbnailImageUrl:(NSURL * _Null_unspecified)url fromSecond:(NSTimeInterval)fromSecond mute:(BOOL)mute;
- (void)switchToFullscreen;
- (void)handleImpression;
- (void)handleClick;
- (void)handleVideoPlayFinish;
- (void)handleLandingPageOpen;
- (void)handleRewardStart;
- (void)handleRewardSuccess;
- (void)handleRewardFailure:(BABRewardResult)result;
- (void)handleParticipation;
@end


@interface BZVNativeAdView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BuzzVideoPlayerDelegate>
- (BOOL)BuzzVideoPlayerShouldAutoPlay:(BuzzVideoPlayer * _Nonnull)videoPlayer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)BuzzVideoPlayerShouldPlay:(BuzzVideoPlayer * _Nonnull)videoPlayer SWIFT_WARN_UNUSED_RESULT;
- (void)BuzzVideoPlayerDidTappedPlayButton:(BuzzVideoPlayer * _Nonnull)videoPlayer wasPlaying:(BOOL)wasPlaying;
- (void)BuzzVideoPlayerDidTappedMuteButton:(BuzzVideoPlayer * _Nonnull)videoPlayer wasMuted:(BOOL)wasMuted;
- (void)BuzzVideoPlayerDidTappedFullscreen:(BuzzVideoPlayer * _Nonnull)videoPlayer;
- (void)BuzzVideoPlayerDidTappedLearnMore:(BuzzVideoPlayer * _Nonnull)videoPlayer;
- (void)BuzzVideoPlayerDidResumeVideo:(BuzzVideoPlayer * _Nonnull)videoPlayer;
- (void)BuzzVideoPlayerWillStartPlayingVideo:(BuzzVideoPlayer * _Nonnull)videoPlayer;
- (void)BuzzVideoPlayerDidFinishPlayingVideo:(BuzzVideoPlayer * _Nonnull)videoPlayer atSecond:(NSTimeInterval)second;
- (NSTimeInterval)BuzzVideoPlayerMinimumPlayTime:(BuzzVideoPlayer * _Nonnull)videoPlayer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)BuzzVideoPlayerShouldShowRemainingTime:(BuzzVideoPlayer * _Nonnull)videoPlayer SWIFT_WARN_UNUSED_RESULT;
- (void)BuzzVideoPlayerDidPassMinimumPlayTime:(BuzzVideoPlayer * _Nonnull)videoPlayer atSecond:(NSTimeInterval)second;
- (void)BuzzVideoPlayerDidPause:(BuzzVideoPlayer * _Nonnull)videoPlayer atSecond:(NSTimeInterval)second;
- (void)BuzzVideoPlayerWillReplayVideo:(BuzzVideoPlayer * _Nonnull)videoPlayer;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK21BZVNativeAdViewBinder")
@interface BZVNativeAdViewBinder : NSObject
- (void)bindWithNativeAd:(BZVNativeAd * _Nonnull)nativeAd;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BZVNativeAdViewBinderBuilder;

@interface BZVNativeAdViewBinder (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (BZVNativeAdViewBinder * _Nonnull)viewBinderWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVNativeAdViewBinderBuilder * _Nonnull))block SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVNativeAdViewBinderBuilder * _Nonnull))block;
@end


@interface BZVNativeAdViewBinder (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BZVNativeAdEventDelegate>
- (void)didImpressAd:(BZVNativeAd * _Nonnull)nativeAd;
- (void)didClickAd:(BZVNativeAd * _Nonnull)nativeAd;
- (void)didRequestRewardForAd:(BZVNativeAd * _Nonnull)ad;
- (void)didRewardForAd:(BZVNativeAd * _Nonnull)Ad withResult:(enum BZVRewardResult)result;
- (void)didParticipateAd:(BZVNativeAd * _Nonnull)nativeAd;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK28BZVNativeAdViewBinderBuilder")
@interface BZVNativeAdViewBinderBuilder : NSObject
@property (nonatomic, strong) BZVNativeAdView * _Nullable nativeAdView;
@property (nonatomic, strong) BZVMediaView * _Nullable mediaView;
@property (nonatomic, strong) UIView <BZVCtaViewProtocol> * _Nullable ctaView;
@property (nonatomic, strong) UILabel * _Nullable titleLabel;
@property (nonatomic, strong) UILabel * _Nullable descriptionLabel;
@property (nonatomic, strong) UIImageView * _Nullable iconImageView;
@property (nonatomic, copy) NSArray<UIView *> * _Nullable clickableViews;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK19BZVNativeAdsRequest")
@interface BZVNativeAdsRequest : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BZVNativeAdsRequestBuilder;

@interface BZVNativeAdsRequest (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (BZVNativeAdsRequest * _Nonnull)requestWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVNativeAdsRequestBuilder * _Nonnull))block SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVNativeAdsRequestBuilder * _Nonnull))block;
@end

@class NSNumber;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK26BZVNativeAdsRequestBuilder")
@interface BZVNativeAdsRequestBuilder : NSObject
@property (nonatomic, strong) NSNumber * _Nullable adCount;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable revenueTypes;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable categories;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable cpsCategories;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, BZVRewardResult, open) {
  BZVRewardResultSuccess = 0,
  BZVRewardResultAlreadyParticipated = 1,
  BZVRewardResultBrowserNotLaunched = 2,
  BZVRewardResultTooShortToParticipate = 3,
  BZVRewardResultNetworkError = 4,
  BZVRewardResultClientError = 5,
  BZVRewardResultServerError = 6,
  BZVRewardResultTimeout = 7,
  BZVRewardResultMissingReward = 8,
  BZVRewardResultUnknownError = 9,
};


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK18BZVUserPreferences")
@interface BZVUserPreferences : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BZVUserPreferencesBuilder;

@interface BZVUserPreferences (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (BZVUserPreferences * _Nonnull)userPreferencesWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVUserPreferencesBuilder * _Nonnull))block SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithBlock:(SWIFT_NOESCAPE void (^ _Nonnull)(BZVUserPreferencesBuilder * _Nonnull))block;
@end


SWIFT_CLASS("_TtC16BuzzAdBenefitSDK25BZVUserPreferencesBuilder")
@interface BZVUserPreferencesBuilder : NSObject
@property (nonatomic) BZVVideoAutoPlayType autoPlayType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKScriptMessage;

SWIFT_CLASS("_TtC16BuzzAdBenefitSDK15BZVWebInterface")
@interface BZVWebInterface : NSObject
- (nonnull instancetype)initWithWebView:(WKWebView * _Nullable)webView OBJC_DESIGNATED_INITIALIZER;
- (void)handleScriptMessage:(WKScriptMessage * _Nonnull)scriptMessage;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("BaseBIEvent")
@interface BABBaseBIEvent : NSObject <BABBIEvent>
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull attributes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BABBaseBIEvent (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (id <BABBIEvent> _Nonnull)initSDK SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (id <BABBIEvent> _Nonnull)enterForeground SWIFT_WARN_UNUSED_RESULT;
+ (id <BABBIEvent> _Nonnull)showPrivacyPolicy SWIFT_WARN_UNUSED_RESULT;
+ (id <BABBIEvent> _Nonnull)agreePrivacyPolicy SWIFT_WARN_UNUSED_RESULT;
+ (id <BABBIEvent> _Nonnull)disagreePrivacyPolicy SWIFT_WARN_UNUSED_RESULT;
+ (id <BABBIEvent> _Nonnull)enterPrivacyPolicyWebPage SWIFT_WARN_UNUSED_RESULT;
+ (id <BABBIEvent> _Nonnull)clickWidget SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BABBaseRewardError, "BaseRewardError", open) {
  BABBaseRewardErrorResourceNotFound = 0,
};
static NSString * _Nonnull const BABBaseRewardErrorDomain = @"BuzzAdBenefitSDK.BaseRewardError";

typedef SWIFT_ENUM_NAMED(NSInteger, BABBaseRewardEventType, "BaseRewardEventType", open) {
  BABBaseRewardEventTypeLanded = 0,
  BABBaseRewardEventTypeAction = 1,
  BABBaseRewardEventTypeWalked = 2,
  BABBaseRewardEventTypeWon = 3,
  BABBaseRewardEventTypeOpened = 4,
};

enum BABBaseRewardResourceType : NSInteger;

SWIFT_CLASS_NAMED("BaseRewardManager")
@interface BABBaseRewardManager : NSObject
- (nonnull instancetype)init;
/// Gets base reward amount without claiming the reward.
- (void)getBaseRewardAmountWith:(NSString * _Nonnull)unitId eventType:(enum BABBaseRewardEventType)eventType resourceType:(enum BABBaseRewardResourceType)resourceType onSuccess:(void (^ _Nonnull)(NSInteger))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
/// Claims base reward.
/// If successful, it calls onSuccess closure with claimed reward amount.
- (void)claimBaseRewardWith:(NSString * _Nonnull)unitId eventType:(enum BABBaseRewardEventType)eventType resourceType:(enum BABBaseRewardResourceType)resourceType onSuccess:(void (^ _Nonnull)(NSInteger))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BABBaseRewardResourceType, "BaseRewardResourceType", open) {
  BABBaseRewardResourceTypeAd = 0,
  BABBaseRewardResourceTypeArticle = 1,
  BABBaseRewardResourceTypePedometer = 2,
  BABBaseRewardResourceTypeLottery = 3,
  BABBaseRewardResourceTypeFeed = 4,
};

@class UIPanGestureRecognizer;

SWIFT_PROTOCOL_NAMED("BottomSheetPresentable")
@protocol BABBottomSheetPresentable
- (BOOL)allowsDragToDismiss SWIFT_WARN_UNUSED_RESULT;
- (BOOL)allowsTapToDismiss SWIFT_WARN_UNUSED_RESULT;
- (BOOL)shouldRespondToPanGestureRecognizer:(UIPanGestureRecognizer * _Nonnull)panGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)portraitHeightRatio SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)landscapeHeightRatio SWIFT_WARN_UNUSED_RESULT;
@end



@interface BuzzMediaView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BABImpressionTrackableView>
- (BOOL)shouldTrackImpression SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidImpressed;
- (void)viewBecomeVisible;
- (void)viewBecomeInvisible;
@end

typedef SWIFT_ENUM(NSInteger, BuzzMediaViewAspect, open) {
  BuzzMediaViewAspectFit = 0,
  BuzzMediaViewAspectFill = 1,
};


SWIFT_CLASS_NAMED("Color")
@interface BABColor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface BABColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull dimmer_base;)
+ (UIColor * _Nonnull)dimmer_base SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull dimmer_drastic;)
+ (UIColor * _Nonnull)dimmer_drastic SWIFT_WARN_UNUSED_RESULT;
@end


@interface BABColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull status_best;)
+ (UIColor * _Nonnull)status_best SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull status_success;)
+ (UIColor * _Nonnull)status_success SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull status_warning;)
+ (UIColor * _Nonnull)status_warning SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull status_error;)
+ (UIColor * _Nonnull)status_error SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull status_alert;)
+ (UIColor * _Nonnull)status_alert SWIFT_WARN_UNUSED_RESULT;
@end


@interface BABColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull primary_dark;)
+ (UIColor * _Nonnull)primary_dark SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull primary_base;)
+ (UIColor * _Nonnull)primary_base SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull primary_light;)
+ (UIColor * _Nonnull)primary_light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull primary_lighter;)
+ (UIColor * _Nonnull)primary_lighter SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull primary_lightest;)
+ (UIColor * _Nonnull)primary_lightest SWIFT_WARN_UNUSED_RESULT;
@end


@interface BABColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_base;)
+ (UIColor * _Nonnull)text_base SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_emphasis;)
+ (UIColor * _Nonnull)text_emphasis SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_description;)
+ (UIColor * _Nonnull)text_description SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_assistive;)
+ (UIColor * _Nonnull)text_assistive SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_disabled;)
+ (UIColor * _Nonnull)text_disabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_overlay;)
+ (UIColor * _Nonnull)text_overlay SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull text_deem;)
+ (UIColor * _Nonnull)text_deem SWIFT_WARN_UNUSED_RESULT;
@end


@interface BABColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_base;)
+ (UIColor * _Nonnull)background_base SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_emphasis;)
+ (UIColor * _Nonnull)background_emphasis SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_separator;)
+ (UIColor * _Nonnull)background_separator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_elevation;)
+ (UIColor * _Nonnull)background_elevation SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_modal;)
+ (UIColor * _Nonnull)background_modal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_overlay_drastic;)
+ (UIColor * _Nonnull)background_overlay_drastic SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_overlay_ripple;)
+ (UIColor * _Nonnull)background_overlay_ripple SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_overlay_light;)
+ (UIColor * _Nonnull)background_overlay_light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull background_overlay_lightest;)
+ (UIColor * _Nonnull)background_overlay_lightest SWIFT_WARN_UNUSED_RESULT;
@end


@interface BABColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull gray_lightest;)
+ (UIColor * _Nonnull)gray_lightest SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull gray_light;)
+ (UIColor * _Nonnull)gray_light SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull gray_darkest;)
+ (UIColor * _Nonnull)gray_darkest SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black005;)
+ (UIColor * _Nonnull)black005 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black012;)
+ (UIColor * _Nonnull)black012 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black015;)
+ (UIColor * _Nonnull)black015 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black033;)
+ (UIColor * _Nonnull)black033 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black040;)
+ (UIColor * _Nonnull)black040 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black055;)
+ (UIColor * _Nonnull)black055 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black070;)
+ (UIColor * _Nonnull)black070 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black087;)
+ (UIColor * _Nonnull)black087 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull black100;)
+ (UIColor * _Nonnull)black100 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull white005;)
+ (UIColor * _Nonnull)white005 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull white015;)
+ (UIColor * _Nonnull)white015 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull white033;)
+ (UIColor * _Nonnull)white033 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull white040;)
+ (UIColor * _Nonnull)white040 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull white070;)
+ (UIColor * _Nonnull)white070 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull white100;)
+ (UIColor * _Nonnull)white100 SWIFT_WARN_UNUSED_RESULT;
@end

enum BABDeepLinkSource : NSInteger;
enum BABDeepLinkDestination : NSInteger;

SWIFT_CLASS_NAMED("DeepLink")
@interface BABDeepLink : NSObject
@property (nonatomic, readonly) enum BABDeepLinkSource source;
@property (nonatomic, readonly) enum BABDeepLinkDestination destination;
- (nonnull instancetype)initWithSource:(enum BABDeepLinkSource)source destination:(enum BABDeepLinkDestination)destination OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BABDeepLinkDestination, "DeepLinkDestination", open) {
  BABDeepLinkDestinationFeed = 0,
};


SWIFT_CLASS_NAMED("DeepLinkParser")
@interface BABDeepLinkParser : NSObject
- (BABDeepLink * _Nullable)parseWithUrl:(NSURL * _Nonnull)url error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BABDeepLinkSource, "DeepLinkSource", open) {
  BABDeepLinkSourceWidget = 0,
};


SWIFT_CLASS_NAMED("Device")
@interface BABDevice : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BABDevice * _Nonnull shared;)
+ (BABDevice * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull advertisingIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable identifierForVender;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSDictionary<NSString *, NSString *> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("ImageLoader")
@interface BABImageLoader : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)loadImageFromURL:(NSURL * _Nonnull)url onImageView:(UIImageView * _Nonnull)imageView;
@end


SWIFT_CLASS_NAMED("Logger")
@interface BABLogger : NSObject
+ (void)enableWithSubsystem:(NSString * _Nonnull)subsystem;
+ (void)log:(NSString * _Nonnull)message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class BABServer;
@protocol BABTrackingAuthorizer;

SWIFT_CLASS_NAMED("SDKCore")
@interface BABSDKCore : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BABSDKCore * _Nonnull shared;)
+ (BABSDKCore * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <BABAuthManagerSwift> _Nonnull authManager;
@property (nonatomic, strong) id <BABBIEventTracker> _Nonnull biEventTracker;
@property (nonatomic, readonly, strong) BABBaseRewardManager * _Nonnull baseRewardManager;
@property (nonatomic, readonly, strong) BABServer * _Nonnull server;
@property (nonatomic, readonly, strong) id <BABTrackingAuthorizer> _Nonnull trackingAuthorizer;
@property (nonatomic) BZVUserInterfaceStyle userInterfaceStyle;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum BABServerEnvironment : NSInteger;
enum BABService : NSInteger;

SWIFT_CLASS_NAMED("Server")
@interface BABServer : NSObject
- (void)setEnvironmentTo:(enum BABServerEnvironment)environment;
- (NSString * _Nonnull)getBaseUrlOf:(enum BABService)service SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BABServerEnvironment, "Environment", open) {
  BABServerEnvironmentProd = 0,
  BABServerEnvironmentProdmini = 1,
  BABServerEnvironmentDev = 2,
  BABServerEnvironmentStaging = 3,
  BABServerEnvironmentStagingQA = 4,
  BABServerEnvironmentStagingQA2 = 5,
};

typedef SWIFT_ENUM_NAMED(NSInteger, BABService, "Service", open) {
  BABServiceAd = 0,
  BABServiceAuth = 1,
  BABServiceInsight = 2,
  BABServiceScreen = 3,
  BABServiceBuzzbooster = 4,
  BABServiceBase = 5,
};


SWIFT_CLASS_NAMED("SessionDTO")
@interface BABSessionDTO : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceId;
@property (nonatomic, readonly) BOOL isNewDevice;
@property (nonatomic, readonly, copy) NSString * _Nonnull key;
- (NSDictionary<NSString *, NSString *> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, BABTrackingAuthorizationStatus, "TrackingAuthorizationStatus", open) {
  BABTrackingAuthorizationStatusAuthorized = 0,
  BABTrackingAuthorizationStatusDenied = 1,
  BABTrackingAuthorizationStatusNotDetermined = 2,
  BABTrackingAuthorizationStatusRestricted = 3,
  BABTrackingAuthorizationStatusUnknown = 4,
};


SWIFT_PROTOCOL_NAMED("TrackingAuthorizer")
@protocol BABTrackingAuthorizer
- (BOOL)canGuideAuthorization SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canRequestAuthorization SWIFT_WARN_UNUSED_RESULT;
- (NSURL * _Nonnull)loadAuthorizationGuideURL SWIFT_WARN_UNUSED_RESULT;
- (void)requestAuthorizationOnSuccess:(void (^ _Nonnull)(enum BABTrackingAuthorizationStatus))onSuccess onFailure:(void (^ _Nonnull)(NSError * _Nonnull))onFailure;
@end


@interface UIColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (UIColor * _Nonnull)bab_dynamicColorWithLight:(UIColor * _Nonnull)light dark:(UIColor * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIColor (SWIFT_EXTENSION(BuzzAdBenefitSDK))
- (BOOL)bab_isEqual:(UIColor * _Nonnull)other SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(BuzzAdBenefitSDK))
+ (UIImage * _Nonnull)bab_dynamicImageWithLight:(UIImage * _Nonnull)light dark:(UIImage * _Nonnull)dark SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(BuzzAdBenefitSDK))
- (UIImage * _Nonnull)bab_tint:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
@end



@class UITraitCollection;

SWIFT_PROTOCOL_NAMED("UserInterfaceStyleOverridable")
@protocol BABUserInterfaceStyleOverridable
- (BOOL)bab_needsUpdateCGColorsWithPreviousTraitCollection:(UITraitCollection * _Nullable)previousTraitCollection SWIFT_WARN_UNUSED_RESULT;
- (void)bab_overrideUserInterfaceStyle;
@end


@interface UIView (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BABUserInterfaceStyleOverridable>
- (void)bab_overrideUserInterfaceStyle;
- (BOOL)bab_needsUpdateCGColorsWithPreviousTraitCollection:(UITraitCollection * _Nullable)previousTraitCollection SWIFT_WARN_UNUSED_RESULT;
@end





@interface UIViewController (SWIFT_EXTENSION(BuzzAdBenefitSDK))
- (void)bab_presentBottomSheet:(UIViewController * _Nonnull)viewControllerToPresent completion:(void (^ _Nullable)(void))completion;
@end


@interface UIViewController (SWIFT_EXTENSION(BuzzAdBenefitSDK))
@property (nonatomic, readonly) BOOL bab_isVisible;
@end


@interface UIViewController (SWIFT_EXTENSION(BuzzAdBenefitSDK)) <BABUserInterfaceStyleOverridable>
- (void)bab_overrideUserInterfaceStyle;
- (BOOL)bab_needsUpdateCGColorsWithPreviousTraitCollection:(UITraitCollection * _Nullable)previousTraitCollection SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIWindow (SWIFT_EXTENSION(BuzzAdBenefitSDK))
- (UIViewController * _Nullable)bab_topViewController SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM_NAMED(NSInteger, BABUserGenderDTO, "UserGenderDTO", open) {
  BABUserGenderDTOUnknown = 0,
  BABUserGenderDTOMale = 1,
  BABUserGenderDTOFemale = 2,
};



SWIFT_CLASS_NAMED("UserProfileDTO")
@interface BABUserProfileDTO : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
@property (nonatomic, readonly) enum BABUserGenderDTO gender;
@property (nonatomic, readonly) NSInteger birthYear;
- (nonnull instancetype)initWithUserId:(NSString * _Nonnull)userId gender:(enum BABUserGenderDTO)gender birthYear:(NSInteger)birthYear OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, NSString *> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
